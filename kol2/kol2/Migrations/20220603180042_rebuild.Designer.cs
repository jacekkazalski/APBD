// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kol2.Entities;

namespace kol2.Migrations
{
    [DbContext(typeof(EventOrganiserContext))]
    [Migration("20220603180042_rebuild")]
    partial class rebuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kol2.Entities.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEvent")
                        .HasName("Event_pk");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            DateFrom = new DateTime(2022, 6, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            DateTo = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "super festiwal"
                        },
                        new
                        {
                            IdEvent = 2,
                            DateFrom = new DateTime(2022, 5, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            DateTo = new DateTime(2022, 5, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "skonczony festiwal"
                        },
                        new
                        {
                            IdEvent = 3,
                            DateFrom = new DateTime(2022, 6, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            DateTo = new DateTime(2022, 6, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "festiwal z przyszlosci"
                        });
                });

            modelBuilder.Entity("kol2.Entities.EventOrganiser", b =>
                {
                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<int>("IdOrganiser")
                        .HasColumnType("int");

                    b.Property<bool>("MainOrganiser")
                        .HasColumnType("bit");

                    b.HasKey("IdEvent", "IdOrganiser")
                        .HasName("EventOrganiser_pk");

                    b.HasIndex("IdOrganiser");

                    b.ToTable("Event_Organiser");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            IdOrganiser = 1,
                            MainOrganiser = true
                        },
                        new
                        {
                            IdEvent = 2,
                            IdOrganiser = 2,
                            MainOrganiser = true
                        },
                        new
                        {
                            IdEvent = 2,
                            IdOrganiser = 3,
                            MainOrganiser = false
                        },
                        new
                        {
                            IdEvent = 3,
                            IdOrganiser = 2,
                            MainOrganiser = true
                        });
                });

            modelBuilder.Entity("kol2.Entities.Organiser", b =>
                {
                    b.Property<int>("IdOrganiser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOrganiser")
                        .HasName("Organiser_pk");

                    b.ToTable("Organiser");

                    b.HasData(
                        new
                        {
                            IdOrganiser = 1,
                            Name = "duzy organizator"
                        },
                        new
                        {
                            IdOrganiser = 2,
                            Name = "sredni organizator"
                        },
                        new
                        {
                            IdOrganiser = 3,
                            Name = "maly organizator"
                        });
                });

            modelBuilder.Entity("kol2.Entities.EventOrganiser", b =>
                {
                    b.HasOne("kol2.Entities.Event", "IdEventNavigation")
                        .WithMany("EventOrganisers")
                        .HasForeignKey("IdEvent")
                        .HasConstraintName("EventOrganiser_Event")
                        .IsRequired();

                    b.HasOne("kol2.Entities.Organiser", "IdOrganiserNavigation")
                        .WithMany("EventOrganisers")
                        .HasForeignKey("IdOrganiser")
                        .HasConstraintName("EventOrganiser_Organiser")
                        .IsRequired();

                    b.Navigation("IdEventNavigation");

                    b.Navigation("IdOrganiserNavigation");
                });

            modelBuilder.Entity("kol2.Entities.Event", b =>
                {
                    b.Navigation("EventOrganisers");
                });

            modelBuilder.Entity("kol2.Entities.Organiser", b =>
                {
                    b.Navigation("EventOrganisers");
                });
#pragma warning restore 612, 618
        }
    }
}
